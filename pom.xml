<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sjyttkl.spark_learning</groupId>
    <artifactId>spark_learning</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>${java.encoding}</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <java.encoding>UTF-8</java.encoding>
        <base.version>0.0.1</base.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.version.major>2.11</scala.version.major>
        <scala.version>${scala.version.major}.12</scala.version>
        <spark.version>2.1.2</spark.version>
        <hadoop.version>2.7.3</hadoop.version>
        <hbase.version>1.1.6</hbase.version>
        <!--        <spark.home>/opt/spark-2.2.0-bin-hadoop2.7</spark.home>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.hadoop.gplcompression</groupId>
            <artifactId>hadoop-lzo</artifactId>
            <version>0.4.20</version>
            <scope>compile</scope>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>com.google.guava</groupId>-->
        <!--            <artifactId>guava</artifactId>-->
        <!--            <version>28.1-jre</version>-->
        <!--        </dependency>-->
        <!--         https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <!--        <dependency>-->
        <!--            <groupId>com.google.code.gson</groupId>-->
        <!--            <artifactId>gson</artifactId>-->
        <!--            <version>2.8.5</version>-->
        <!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.anarres.lzo/lzo-hadoop -->
        <!--        <dependency>-->
        <!--            <groupId>org.anarres.lzo</groupId>-->
        <!--            <artifactId>lzo-hadoop</artifactId>-->
        <!--            <version>1.0.5</version>-->
        <!--            <scope>test</scope>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>compile</scope>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.apache.spark</groupId>-->
        <!--            <artifactId>spark-catalyst_2.11</artifactId>-->
        <!--&lt;!&ndash;            此处版本是对应的scala版本2.11.8&ndash;&gt;-->
        <!--            <version>${spark.version}</version>-->
        <!--&lt;!&ndash;            我的是spark2.3.1&ndash;&gt;-->
        <!--            <scope>compile</scope>-->
        <!--&lt;!&ndash;            //特别注意这里要使用compile&ndash;&gt;-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.version.major}</artifactId>
            <version>${spark.version}</version>
            <!--            <version>2.4.3</version>-->
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.version.major}</artifactId>
            <version>${spark.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.hive/hive-exec -->
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-exec</artifactId>
            <version>2.3.4</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-yarn_${scala.version.major}</artifactId>
            <version>2.1.1</version>
            <scope>compile</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-hive -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.version.major}</artifactId>
            <version>${spark.version}</version>
            <scope>compile</scope>
            <!--pom中的provided指的是编译需要，发布不需要，当我们通过spark-submit提交时，spark会提供需要的streaming包，-->
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.version.major}</artifactId>
            <version>2.1.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-tools</groupId>
            <artifactId>maven-scala-plugin</artifactId>
            <version>2.15.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce-client-core</artifactId>
            <version>2.7.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_2.12</artifactId>
            <version>2.4.0</version>
            <scope>provided</scope>
        </dependency>
        <!--从kafka中采集数据-->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-8_2.11</artifactId>
            <version>2.1.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>0.11.0.2</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>2.7.3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.27</version>
            <scope>provided</scope>
        </dependency>

        <!--工具类-->
        <dependency>
            <groupId>com.vdian</groupId>
            <artifactId>VdianCommon</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

        <!--hanlp -->
        <dependency>
            <groupId>com.hankcs</groupId>
            <artifactId>hanlp</artifactId>
            <version>portable-1.7.5</version>
            <scope>provided</scope>
        </dependency>
        <!--        自动机结合DoubleArrayTrie极速多模式匹配-->
        <dependency>
            <groupId>com.hankcs</groupId>
            <artifactId>aho-corasick-double-array-trie</artifactId>
            <version>1.2.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.huaban/jieba-analysis -->
        <!--        <dependency>-->
        <!--            <groupId>com.huaban</groupId>-->
        <!--            <artifactId>jieba-analysis</artifactId>-->
        <!--            <version>1.0.2</version>-->
        <!--            <scope>provided</scope>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.ansj</groupId>
            <artifactId>ansj_seg</artifactId>
            <version>5.1.6</version>
            <scope>provided</scope>
        </dependency>
        <!--opencc4j 简体转繁体-->
        <dependency>
            <groupId>com.github.houbb</groupId>
            <artifactId>opencc4j</artifactId>
            <version>1.0.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!--汉子转拼音-->
            <groupId>com.github.stuxuhai</groupId>
            <artifactId>jpinyin</artifactId>
            <version>1.1.8</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.16</version><!--版本号自己选一个就行-->
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!--        <dependency>-->
        <!--            <groupId>org.jetbrains</groupId>-->
        <!--            <artifactId>annotations</artifactId>-->
        <!--            <version>RELEASE</version>-->
        <!--            <scope>provided</scope>-->
        <!--        </dependency>-->
    </dependencies>


    <repositories>
        <repository>
            <id>scala-tools.org</id>
            <name>Scala-Tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>scala-tools.org</id>
            <name>Scala-Tools Maven2 Repository</name>
            <url>http://scala-tools.org/repo-releases</url>
        </pluginRepository>
    </pluginRepositories>

    <!--bulid 这里是写scala的插件-->
    <build>
        <finalName>QuerySuggest</finalName>
        <plugins>
            <!-- 这里是  scala 打包插件，删除了scala就不会被打包进入jar了-->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--打包插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>spark_learning</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>
                            jar-with-dependencies
                        </descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assesmbly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>
        </plugins>
    </build>

</project>